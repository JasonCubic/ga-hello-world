# https://docs.github.com/en/actions/using-workflows/reusing-workflows#example-reusable-workflow
name: hello-world reusable workflow

on:
  workflow_call:
    inputs:
      runs-on:
        required: false
        default: '["ubuntu-latest"]'
        type: string
      who-to-greet:
        description: Who to greet
        required: false
        default: World
        type: string

jobs:
  hello-world:
    name: reusable workflow hello world
    runs-on: ${{ fromJSON(inputs.runs-on) }}

    steps:
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
      - name: Dump job context
        run: echo '${{ toJSON(job) }}'
      - name: Dump steps context
        run: echo '${{ toJSON(steps) }}'
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'
      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}'
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'

      - uses: actions/checkout@v3

      # https://github.com/Tiryoh/gha-jobid-action/blob/main/entrypoint.sh
      - name: get workflow file ${{ github.event.workflow }} job_id
        run: |
          GITHUB_BASEURL=https://api.github.com
          GITHUB_API="/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs"
          curl --get -Ss -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" "${GITHUB_BASEURL}${GITHUB_API}?per_page=30"
      # eval "$(curl --get -Ss -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" "${GITHUB_BASEURL}${GITHUB_API}?per_page=30" \
      # | jq -r --arg job_name "${INPUT_JOB_NAME}" '.jobs | map(select(.name == $job_name)) | .[0] | @sh "job_id=\(.id) html_url=\(.html_url)"')"
      # echo "job_id=${job_id}" >> $GITHUB_OUTPUT
      # echo "html_url=${html_url}" >> $GITHUB_OUTPUT

      # if curl -i -H 'Content-Type: application/json' -H "Authorization: bearer ${{ secrets.GITHUB_TOKEN }}" -X POST -d '{"query": "query($issue: Int!, $owner: String!, $repo: String!) { repository(owner: $owner, name: $repo) { issue(number: $issue) { projectCards { nodes { project { name } } } } } } ", "variables" : "{ \"issue\": '${ISSUE}', \"owner\": \"'${OWNER}'\", \"repo\": \"'${REPO}'\" }" }' https://git.t3.daimlertruck.com/api/graphql | grep "\b$BOARD_NAME\b"; then
      #   echo "Issue is already in Project '$BOARD_NAME', cancelling this workflow";
      #   echo "ALREADY_IN_BOARD=true" >> $GITHUB_ENV
      # else
      #   echo "Issue is not in project '$BOARD_NAME', adding it to $BOARD_NAME."
      #   echo "ALREADY_IN_BOARD=false" >> $GITHUB_ENV
      # fi

      - name: Check out repository
        uses: actions/checkout@v3
        with:
          # github-server-url: https://git.t3.daimlertruck.com
          repository: JasonCubic/ga-hello-world
          ref: main
          path: ./.github/actions/ga-hello-world

      #       - name: test ref values
      #         run: |
      #           echo "github.action_ref: ${{ github.action_ref }}"
      #           echo "github.base_ref: ${{ github.base_ref }}"
      #           echo "github.head_ref: ${{ github.head_ref }}"
      #           echo "github.ref: ${{ github.ref }}"
      #           echo "github.workflow_ref: ${{ github.workflow_ref }}"
      #           echo "github.job_workflow_sha: ${{ github.job_workflow_sha }}"
      - name: run a hello-world docker based GitHub Action
        # https://docs.github.com/en/actions/learn-github-actions/variables
        # uses: JasonCubic/ga-hello-world@v0.0.5
        uses: ./.github/actions/ga-hello-world
        with:
          who-to-greet: ${{ inputs.who-to-greet }}
